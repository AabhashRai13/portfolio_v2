name: "Flutter Web Build & Deploy to Hostinger"

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      # 📥 Checkout repository code
      - name: Checkout source
        uses: actions/checkout@v3

      # ⚙️ Set up Flutter
      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          architecture: x64

      # 🔑 Create keys.dart with secure secrets
      - name: Generate lib/keys.dart
        run: |
          mkdir -p lib
          echo "const String emailJsServiceId = '${{ secrets.EMAILJS_SERVICE_ID }}';" > lib/keys.dart
          echo "const String emailJsTemplateId = '${{ secrets.EMAILJS_TEMPLATE_ID }}';" >> lib/keys.dart
          echo "const String emailJsPublicKey = '${{ secrets.EMAILJS_PUBLIC_KEY }}';" >> lib/keys.dart
          echo "const String emailJsPrivateKey = '${{ secrets.EMAILJS_PRIVATE_KEY }}';" >> lib/keys.dart

      # 🧼 Clean previous build (optional but safe)
      - name: Clean build
        run: flutter clean

      # 📦 Install dependencies
      - name: Get Flutter packages
        run: flutter pub get

      # 🛠️ Build Flutter Web
      - name: Build web release
        run: flutter build web --release

      # 🧹 Remove service worker to avoid aggressive caching (optional)
      - name: Remove service worker
        run: rm -f build/web/flutter_service_worker.js

      # 🚀 Deploy to Hostinger via FTP
      - name: Deploy to Hostinger via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: build/web/
          server-dir: /home/u728098782/domains/aabhashrai.com/public_html
          #Optional: uncomment the line below to delete everything before deploying
          dangerous-clean-slate: true
