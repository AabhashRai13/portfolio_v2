name: Flutter Web CI/CD Deploy to Hostinger

on:
  push:
    branches:
      - main  # Change if your main branch is different

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 📥 Checkout the repo
    - name: Checkout code
      uses: actions/checkout@v2

    # 🛠️ Set up Flutter SDK
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable

           # Step to create keys.dart
    - name: Create keys.dart
      run: |
          mkdir -p lib
          echo "const String emailJsServiceId = '${{ secrets.EMAILJS_SERVICE_ID }}';" > lib/keys.dart
          echo "const String emailJsTemplateId = '${{ secrets.EMAILJS_TEMPLATE_ID }}';" >> lib/keys.dart
          echo "const String emailJsPublicKey = '${{ secrets.EMAILJS_PUBLIC_KEY }}';" >> lib/keys.dart
          echo "const String emailJsPrivateKey = '${{ secrets.EMAILJS_PRIVATE_KEY }}';" >> lib/keys.dart

    # 📦 Install Dart/Flutter dependencies
    - name: Get dependencies
      run: flutter pub get

    # 🧼 Clean previous builds (optional but recommended)
    - name: Clean build
      run: flutter clean

    # 🛠️ Build Flutter Web
    - name: Build Flutter Web
      run: flutter build web --release

    # 🚫 Remove service worker to avoid aggressive caching
    - name: Remove flutter_service_worker.js
      run: rm -f build/web/flutter_service_worker.js

    # 🌐 Install lftp (FTP CLI client)
    - name: Install FTP client (lftp)
      run: sudo apt-get install lftp

    # 🚀 Deploy to Hostinger via FTP
    - name: Deploy to Hostinger
      env:
        FTP_SERVER: ${{ secrets.FTP_SERVER }}
        FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
      run: |
        lftp -c "
        set ftp:list-options -a;
        open -u $FTP_USERNAME,$FTP_PASSWORD $FTP_SERVER;
        mirror -R ./build/web /public_html;
        bye
        "
