on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
name: "Build & Release"
jobs:
  build:
    name: Build & Release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

        # Step to create keys.dart
      - name: Create keys.dart
        run: |
          mkdir -p lib
          echo "const String emailJsServiceId = '${{ secrets.EMAILJS_SERVICE_ID }}';" > lib/keys.dart
          echo "const String emailJsTemplateId = '${{ secrets.EMAILJS_TEMPLATE_ID }}';" >> lib/keys.dart
          echo "const String emailJsPublicKey = '${{ secrets.EMAILJS_PUBLIC_KEY }}';" >> lib/keys.dart
          echo "const String emailJsPrivateKey = '${{ secrets.EMAILJS_PRIVATE_KEY }}';" >> lib/keys.dart

      - name: Build Web
        run: flutter build web
      
      - name: Remove service worker to avoid cache
        run: rm -f build/web/flutter_service_worker.js

      - name: Deploy Web to Hostinger via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}        # Your FTP IP or domain
          username: ${{ secrets.FTP_USERNAME }}    # Hostinger FTP username
          password: ${{ secrets.FTP_PASSWORD }}    # FTP password
          local-dir: build/web/                     # Flutter web output folder
          server-dir: ${{ secrets.FTP_REMOTE_DIR }} 
    

      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*,build/ios/iphoneos/app.ipa"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}






# push to master, main, develop
# pull request on main master